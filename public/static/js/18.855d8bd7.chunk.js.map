{"version":3,"sources":["pages/generator/Fast.jsx","pages/generator/SourceCode.jsx","pages/generator/PreviewModal.jsx","pages/generator/Single.jsx","pages/generator/index.jsx"],"names":["EditTable","tableEditable","Table","renderContent","value","record","obj","children","props","isTable","colSpan","Fast","config","ajax","state","loading","selectedRowKeys","dataSource","columns","title","dataIndex","width","style","paddingLeft","formProps","index","label","colon","required","tabIndex","onBlur","e","chinese","target","render","field","tags","renderTags","setState","textAlign","renderFieldTags","handleSubmit","values","get","then","res","getTables","finally","handleDbUrlChange","dbUrl","window","localStorage","setItem","DB_URL_STORE_KEY","handleGen","confirm","icon","ExclamationCircleOutlined","content","onOk","params","tables","filter","item","includes","id","map","it","getLabel","name","type","length","isNullable","isForm","isColumn","isQuery","post","successTip","console","log","getItem","this","form","setFieldsValue","submit","padding","margin","marginLeft","marginRight","ref","onFinish","placeholder","onChange","rules","message","htmlType","disabled","onClick","fitHeight","rowSelection","renderCell","checked","originNode","rowKey","Component","SourceCode","containerHeight","setHeight","winHeight","document","documentElement","clientHeight","body","height","highlight","current","Prism","highlightElement","React","createRef","addEventListener","removeEventListener","code","node","container","showHeader","readOnly","TabPane","modal","top","previewCode","onCancel","surplusSpace","footer","bodyStyle","tabBarStyle","fileTypeName","tab","language","plugins","tableRowDraggable","UserCenter","total","pageNum","pageSize","deleting","table","ignoreFields","previewVisible","fastEdit","onFocus","handleFocus","onKeyDown","handleKeyDown","showSearch","options","formType","items","color","onConfirm","handleDelete","select","keyCode","ctrlKey","shiftKey","altKey","metaKey","nextTabIndex","isRight","isDown","isEnter","undefined","nextInput","querySelector","setTimeout","focus","handleAdd","ti","handleTypeChange","handleModuleNameChange","handleSwaggerChange","getFieldValue","tableName","handleTableNameChange","swaggerUrl","SWAGGER_URL_STORE_KEY","method","userName","password","moduleName","queries","forms","forEach","getFormElementType","oType","push","uuid","comment","isExport","isImport","isIgnore","find","query","selectable","pagination","serialNumber","add","operatorEdit","operatorDelete","batchDelete","export","import","append","newRecord","unshift","getParams","showTip","a","validateFields","error","Promise","reject","resolve","handlePreview","handleSortEnd","newIndex","oldIndex","splice","handleFastEdit","nextVisible","getElementById","rows","split","str","trim","replace","getFormElementName","fields","initialValues","Item","noStyle","shouldUpdate","prevValues","currValues","marginBottom","display","justifyContent","paddingRight","paddingTop","position","TextArea","right","bottom","left","defaultValue","key","join","onSortEnd","size","visible","path","useState","activeKey","setActiveKey","useEffect","createEvent","ev","initEvent","dispatchEvent","createEventObject","fireEvent","s","root"],"mappings":"yVAcMA,EAAYC,YAAcC,KAE1BC,EAAgB,SAACC,EAAOC,GAC1B,IAAMC,EAAM,CACRC,SAAUH,EACVI,MAAO,IAKX,OAHIH,EAAOI,UACPH,EAAIE,MAAME,QAAU,GAEjBJ,GAKUK,EADpBC,YAAO,CAAEC,MAAM,G,+MAEZC,MAAQ,CACJC,SAAS,EACTC,gBAAiB,GACjBC,WAAY,I,EAGhBC,QAAU,CACN,CAAEC,MAAO,eAAMC,UAAW,YAAaC,MAAO,KAC9C,CAAEF,MAAO,iCAASC,UAAW,UAAWC,MAAO,KAC/C,CACIF,MAAO,sBAAMG,MAAO,CAAEC,YAAa,IAA5B,gCAA8CH,UAAW,UAAWC,MAAO,IAClFG,UAAW,SAACnB,EAAQoB,GAChB,MAAO,CACHC,MAAO,IACPC,OAAO,EACPL,MAAO,CAAED,MAAO,KAChBO,UAAU,EACVC,SAAUJ,EAAQ,EAClBK,OAAQ,SAACC,GACL1B,EAAO2B,QAAUD,EAAEE,OAAO7B,SAItC8B,OAAQ/B,GAEZ,CACIgB,MAAO,sBAAMG,MAAO,CAAEC,YAAa,IAA5B,0BAA6CH,UAAW,QAASC,MAAO,IAC/EG,UAAW,SAACnB,EAAQoB,GAChB,OAAIpB,EAAOI,QAAgB,KAEpB,CACHiB,MAAO,IACPC,OAAO,EACPL,MAAO,CAAED,MAAO,KAChBO,UAAU,EACVC,SAAUJ,EAAQ,IAClBK,OAAQ,SAACC,GACL1B,EAAO8B,MAAQJ,EAAEE,OAAO7B,SAIpC8B,OAAQ,SAAC9B,EAAOC,GACZ,GAAIA,EAAOI,QAAS,CAChB,IAAM2B,EAAOC,qBAAWhC,GAAQ,kBAAM,EAAKiC,SAAS,CAAErB,WAAW,YAAK,EAAKH,MAAMG,iBACjF,MAAO,CACHV,SAAU,qBAAKe,MAAO,CAAEiB,UAAW,SAAzB,SAAqCH,IAC/C5B,MAAO,CACHE,QAAS,IAIrB,OAAON,IAGf,CACIe,MAAO,eAAMC,UAAW,UACxBc,OAAQ,SAAC9B,EAAOC,GAEZ,MAAO,CACHE,SAFaiC,0BAAgBnC,GAAQ,kBAAM,EAAKiC,SAAS,CAAErB,WAAW,YAAK,EAAKH,MAAMG,iBAGtFT,MAAO,CAAEE,QAASL,EAAOI,QAAU,EAAI,O,EAgBvDgC,aAAe,SAACC,GACZ,EAAKJ,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK8B,IAAI,iBAAkBD,GACjCE,MAAK,SAAAC,GAAQ,IAAD,EAC+BC,oBAAUD,GAA1C5B,EADC,EACDA,WAAYD,EADX,EACWA,gBAEpB,EAAKsB,SAAS,CAAErB,aAAYD,uBAE/B+B,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,Q,EAGhDiC,kBAAoB,SAACjB,GACjB,IAAMkB,EAAQlB,EAAEE,OAAO7B,MAGvB8C,OAAOC,aAAaC,QAAQC,mBAAkBJ,GAAS,K,EAG3DK,UAAY,WACR,IAAMC,QAAQ,CACVC,KAAM,cAACC,EAAA,EAAD,IACNtC,MAAO,uFACPuC,QAAS,kOACTC,KAAM,WAAO,IAAD,EACgC,EAAK7C,MAArCE,EADA,EACAA,gBAqBF4C,EAAS,CACXC,OAvBI,EACiB5C,WACC6C,QAAO,SAAAC,GAAI,OAAI/C,EAAgBgD,SAASD,EAAKE,OACjDC,KAAI,SAAAH,GACtB,IAAMxD,EAAWwD,EAAKxD,SACjB2D,KAAI,SAAAC,GAAE,MAAK,CACRhC,MAAOgC,EAAGhC,MACVH,QAASoC,mBAASD,EAAGnC,SACrBqC,KAAMF,EAAGE,KACTC,KAAMH,EAAGG,KACTC,OAAQJ,EAAGI,OACXC,WAAYL,EAAGK,WACfC,OAAQN,EAAGM,OACXC,SAAUP,EAAGO,SACbC,QAASR,EAAGQ,YAGpB,OAAO,2BACAZ,GADP,IAEIxD,iBAMR,EAAK+B,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK+D,KAAK,iBAAkBhB,EAAQ,CAAEiB,WAAY,mCACxDjC,MAAK,SAAAC,GACFiC,QAAQC,IAAIlC,MAEfE,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,W,uDA9DxD,WACI,IAAMkC,EAAQC,OAAOC,aAAa6B,QAAQ3B,qBAAqB,GAC3DJ,IACAgC,KAAKC,KAAKC,eAAe,CAAElC,UAE3BgC,KAAKC,KAAKE,Y,oBA8DlB,WAAU,IAAD,SAC4CH,KAAKnE,MAA9CG,EADH,EACGA,WAAYD,EADf,EACeA,gBAAiBD,EADhC,EACgCA,QAErC,OACI,eAAC,IAAD,CAAaO,MAAO,CAAE+D,QAAS,EAAGC,OAAQ,GAAKvE,QAASA,EAAxD,UACI,cAAC,IAAD,CAAUO,MAAO,CAAEiE,WAAY,EAAGC,YAAa,GAA/C,SACI,mBACIC,IAAK,SAAAP,GAAI,OAAI,EAAKA,KAAOA,GACzBQ,SAAUT,KAAKxC,aAFnB,SAII,8BACI,cAAC,IAAD,CACIf,MAAM,iCACN2C,KAAK,QACLsB,YAAY,+CACZ/D,UAAQ,EACRgE,SAAUX,KAAKjC,kBACf1B,MAAO,CAAED,MAAO,KAChBwE,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,6DAEvC,cAAC,IAAD,UACI,8BACI,mBAAQxB,KAAK,UAAUyB,SAAS,SAAhC,kDACA,mBAAQC,WAAU,OAAChF,QAAD,IAACA,KAAiBuD,QAAQ0B,QAAShB,KAAK3B,UAA1D,wDAOpB,cAACtD,EAAD,CACIkG,WAAS,EACTC,aAAc,CACVnF,kBACA4E,SAAU,SAAA5E,GAAe,OAAI,EAAKsB,SAAS,CAAEtB,qBAC7CoF,WAAY,SAACC,EAAShG,EAAQoB,EAAO6E,GAAzB,OAAwCjG,EAAOI,QAAU6F,EAAa,OAEtFrF,WAAYA,EACZC,QAAS+D,KAAK/D,QACdqF,OAAO,c,GA9KOC,e,mFCzBbC,E,kDACjB,WAAYjG,GAAQ,IAAD,8BACf,cAAMA,IAIVM,MAAQ,CACJ4F,gBAAiB,QANF,EAoBnBC,UAAY,WACR,IAAMC,EAAYC,SAASC,gBAAgBC,cAAgBF,SAASG,KAAKD,aACzEjC,QAAQC,IAAI6B,GACZ,IAAMK,EAASL,EAAY,IAE3B,EAAKtE,SAAS,CAAEoE,gBAAiBO,KAzBlB,EAgCnBC,UAAY,WACRpC,QAAQC,IAAI,EAAKU,KACb,EAAKA,KAAO,EAAKA,IAAI0B,SACrBC,IAAMC,iBAAiB,EAAK5B,IAAI0B,UAjCpC,EAAK1B,IAAM6B,IAAMC,YAFF,E,qDASnB,WACItC,KAAKiC,YAELjC,KAAK0B,YACLzD,OAAOsE,iBAAiB,SAAUvC,KAAK0B,a,gCAG3C,WACI1B,KAAKiC,c,kCAWT,WACIhE,OAAOuE,oBAAoB,SAAUxC,KAAK0B,a,oBAU9C,WAAU,IAAD,OACGe,EAASzC,KAAKzE,MAAdkH,KACAhB,EAAoBzB,KAAKnE,MAAzB4F,gBACR,OACI,qBAAKjB,IAAK,SAAAkC,GAAI,OAAI,EAAKC,UAAYD,GAAMrG,MAAO,CAAE2F,OAAQP,GAA1D,SACI,cAAC,IAAD,CACImB,YAAY,EACZzH,MAAOsH,EACPI,UAAQ,U,GAhDYR,IAAMd,WCEvCuB,E,IAAAA,QASctG,EAPpBb,YAAO,CACJoH,MAAO,CACH7G,MAAO,2BACPE,MAAO,MACP4G,IAAK,K,+MAITnH,MAAQ,G,4CAER,WAAU,IAAD,EAC2BmE,KAAKzE,MAA9B0H,EADF,EACEA,YAAaC,EADf,EACeA,SACpB,OACI,cAAC,IAAD,CACIC,cAAY,EACZC,OAAQ,mBAAQpC,QAASkC,EAAjB,0BACRG,UAAW,CAACjD,QAAS,GAHzB,SAKI,mBAAMkD,YAAa,CAACjD,OAAQ,UAA5B,SACK4C,EAAYhE,KAAI,SAAAH,GAAS,IACNyE,EAAuBzE,EAAhCnD,OAAS4H,aAAed,EAAQ3D,EAAR2D,KAC/B,OACI,cAACK,EAAD,CAASU,IAAKD,EAAd,SACI,cAAC,EAAD,CACIE,SAAS,MACTC,QAAS,CAAC,gBACVjB,KAAMA,KAJmBc,c,GAf1BhC,e,ECY7BxG,EAAYC,YAAc2I,YAAkB1I,MAK7B2I,EAHpBjI,YAAO,CACJC,MAAM,G,+MAGNC,MAAQ,CACJC,SAAS,EACT+H,MAAO,EACPC,QAAS,EACTC,SAAU,GACVC,UAAU,EACVC,MAAO,GACPrF,OAAQ,GACRsF,aAAc,GACdC,gBAAgB,EAChBlB,YAAa,GACbmB,UAAU,G,EAGdnI,QAAU,CACN,CAAEC,MAAO,eAAMC,UAAW,WAC1B,CACID,MAAO,qBAAOC,UAAW,UAAWC,MAAO,IAC3CG,UAAW,SAACnB,EAAQoB,GAChB,IAAMI,EAAWJ,EAAQ,EACzB,MAAO,CACHC,MAAO,IACPC,OAAO,EACPL,MAAO,CAAED,MAAO,KAChBO,UAAU,EACVC,WACAyH,QAAS,EAAKC,YACdzH,OAAQ,SAACC,GACL1B,EAAO2B,QAAUD,EAAEE,OAAO7B,OAE9BoJ,UAAW,SAACzH,GAAD,OAAO,EAAK0H,cAAc1H,EAAGF,OAIpD,CACIV,MAAO,eAAMC,UAAW,QAASC,MAAO,IACxCG,UAAW,SAACnB,EAAQoB,GAChB,GAAIpB,EAAOI,QAAS,OAAO,KADD,IAETF,EAAe,EAAKO,MAA7BoI,MAAS3I,SAGXsB,EAAWJ,IAFM,OAARlB,QAAQ,IAARA,OAAA,EAAAA,EAAUgE,SAAU,GAED,EAClC,MAAO,CACH7C,MAAO,IACPC,OAAO,EACPL,MAAO,CAAED,MAAO,KAChBO,UAAU,EACVC,WACAyH,QAAS,EAAKC,YACdzH,OAAQ,SAACC,GACL1B,EAAO8B,MAAQJ,EAAEE,OAAO7B,OAE5BoJ,UAAW,SAACzH,GAAD,OAAO,EAAK0H,cAAc1H,EAAGF,OAIpD,CACIV,MAAO,2BAAQC,UAAW,WAAYC,MAAO,IAC7CG,UAAW,SAACnB,GACR,OAAIA,EAAOI,QAAgB,KAEpB,CACHiB,MAAO,IACPC,OAAO,EACPL,MAAO,CAAED,MAAO,KAChBiD,KAAM,SACNoF,YAAY,EACZC,QAAS,CACL,CAAEvJ,MAAO,QAASsB,MAAO,sBACzB,CAAEtB,MAAO,SAAUsB,MAAO,sBAC1B,CAAEtB,MAAO,SAAUsB,MAAO,sBAC1B,CAAEtB,MAAO,WAAYsB,MAAO,sBAC5B,CAAEtB,MAAO,WAAYsB,MAAO,sBAC5B,CAAEtB,MAAO,SAAUsB,MAAO,kCAC1B,CAAEtB,MAAO,QAASsB,MAAO,kCACzB,CAAEtB,MAAO,SAAUsB,MAAO,sBAC1B,CAAEtB,MAAO,cAAesB,MAAO,sBAC/B,CAAEtB,MAAO,WAAYsB,MAAO,sBAC5B,CAAEtB,MAAO,iBAAkBsB,MAAO,4BAClC,CAAEtB,MAAO,QAASsB,MAAO,sBACzB,CAAEtB,MAAO,cAAesB,MAAO,4BAC/B,CAAEtB,MAAO,eAAgBsB,MAAO,kCAChC,CAAEtB,MAAO,SAAUsB,MAAO,4BAC1B,CAAEtB,MAAO,OAAQsB,MAAO,kCACxB,CAAEtB,MAAO,OAAQsB,MAAO,kCACxB,CAAEtB,MAAO,OAAQsB,MAAO,kCACxB,CAAEtB,MAAO,YAAasB,MAAO,+CAC7B,CAAEtB,MAAO,aAAcsB,MAAO,8CAC9B,CAAEtB,MAAO,WAAYsB,MAAO,kCAC5B,CAAEtB,MAAO,WAAYsB,MAAO,uBAEhCkE,SAAU,SAACgE,GACPvJ,EAAOuJ,SAAWA,MAKlC,CACIzI,MAAO,eAAMC,UAAW,WAAYC,MAAO,IAC3Ca,OAAQ,SAAC9B,EAAOC,GACZ,OAAOmC,0BAAgBnC,GAAQ,kBAAM,EAAKiC,SAAS,CAAE4G,MAAM,eAAM,EAAKpI,MAAMoI,cAGpF,CACI/H,MAAO,eAAMC,UAAW,WAAYC,MAAO,IAC3Ca,OAAQ,SAAC9B,EAAOC,GAAY,IAChB4D,EAAgB5D,EAAhB4D,GAAIjC,EAAY3B,EAAZ2B,QACN6H,EAAQ,CACV,CACInI,MAAO,eACPoI,MAAO,MACPvG,QAAS,CACLpC,MAAM,kCAAD,OAAWa,EAAX,MACL+H,UAAW,kBAAM,EAAKC,aAAa/F,OAK/C,OAAO,cAAC,IAAD,CAAU4F,MAAOA,O,EAiBpCN,YAAc,SAACxH,GACXA,EAAEE,OAAOgI,U,EAGbR,cAAgB,SAAC1H,EAAGF,GAAc,IACtBqI,EAAgDnI,EAAhDmI,QAASC,EAAuCpI,EAAvCoI,QAASC,EAA8BrI,EAA9BqI,SAAUC,EAAoBtI,EAApBsI,OAAQC,EAAYvI,EAAZuI,QAE5C,KAAIH,GAAWC,GAAYC,GAAUC,GAArC,CAH6B,IAczBC,EATahK,EAAe,EAAKO,MAA7BoI,MAAS3I,SACXgE,GAAiB,OAARhE,QAAQ,IAARA,OAAA,EAAAA,EAAUgE,SAAU,EAG7BiG,EAAsB,KAAZN,EACVO,EAAqB,KAAZP,EAETQ,EAAsB,KAAZR,GAIZO,GAAUC,KAENH,EADA1I,IAAa0C,GAAU1C,IAAsB,EAAT0C,OACrBoG,EAEA9I,EAAW,GAZT,KAAZqI,IAgBHK,EAAe1I,EAAW,GAbT,KAAZqI,IAiBPK,EADA1I,GAAY0C,EACG1C,EAAW,GAAK,OAAI8I,EAAY9I,EAAW,EAAI0C,EAE/C1C,EAAW0C,GAI9BiG,IAEID,EADA1I,GAAY0C,EACG1C,EAAW0C,EAEX1C,EAAW0C,IAAWA,OAASoG,EAAY9I,EAAW0C,EAAS,GAItF,IAAMqG,EAAY/D,SAASgE,cAAT,0BAA0CN,EAA1C,OAEdK,EAEAE,YAAW,WACPF,EAAUG,QACVH,EAAUX,aAEPS,GAAWD,GAAUD,KAE5B,EAAKQ,WAAU,GAGfF,YAAW,WACP,IAAIG,EAAKpJ,EAEL2I,IAASS,EAAKpJ,EAAW0C,IAExBkG,GAAUC,IAAY7I,IAAsB,EAAT0C,IAAY0G,EAAKpJ,EAAW,GAEpE,EAAK4H,cAAc,CAAES,QAAS,IAAMe,S,EAKhDC,iBAAmB,SAACnJ,GAChB,IAAMuC,EAAOvC,EAAEE,OAAO7B,MACT,UAATkE,GACA,EAAKtB,oBAEI,aAATsB,GACA,EAAK6G,yBAEI,YAAT7G,GACA,EAAK8G,uB,EAIbpI,kBAAoB,SAACjB,GACjB,IAAMkB,EAAQ,EAAKiC,KAAKmG,cAAc,SACtCnI,OAAOC,aAAaC,QAAQC,mBAAkBJ,GAAS,IAGvD,EAAKX,SAAS,CAAEuB,OAAQ,GAAIqF,MAAO,KACnC,EAAKhE,KAAKC,eAAe,CAAEmG,eAAWX,IAEjC1H,IAEL,EAAKX,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK8B,IAAI,iBAAkB,CAAEM,UACnCL,MAAK,SAAAC,GAAQ,IACF5B,EAAe6B,oBAAUD,GAAzB5B,WACR,EAAKqB,SAAS,CAAEuB,OAAQ5C,IAAc,WAAO,IAAD,EAGlCqK,EAAS,UAAGrK,EAAW,UAAd,aAAG,EAAeqK,UAEjC,EAAKpG,KAAKC,eAAe,CAAEmG,cAC3B,EAAKC,sBAAsBD,SAGlCvI,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,S,EAGhDqK,oBAAsB,WAClB,IAAMI,EAAa,EAAKtG,KAAKmG,cAAc,cAO3C,GANAnI,OAAOC,aAAaC,QAAQqI,wBAAuBD,GAGnD,EAAKlJ,SAAS,CAAEuB,OAAQ,GAAIqF,MAAO,KACnC,EAAKhE,KAAKC,eAAe,CAAEmG,eAAWX,IAEjCa,EAAL,CAGA,IAGM5H,EAAS,CACX4H,aACAE,OALW,EAAKxG,KAAKmG,cAAc,UAMnCM,SALa,EAAKzG,KAAKmG,cAAc,YAMrCO,SALa,EAAK1G,KAAKmG,cAAc,aAQzC,EAAK/I,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK8B,IAAI,kBAAmBiB,GAClChB,MAAK,SAAAC,GAAQ,IACUyI,EAAuCzI,EAAnDgJ,WAAuBC,EAA4BjJ,EAA5BiJ,QAAS5K,EAAmB2B,EAAnB3B,QAAS6K,EAAUlJ,EAAVkJ,MAE3CxL,EAAW,IAChBuL,GAAW,IAAIE,SAAQ,SAAAjI,GAAS,IACrBO,EAAiCP,EAAjCO,KAAMnC,EAA2B4B,EAA3B5B,MAAOT,EAAoBqC,EAApBrC,MAAOE,EAAamC,EAAbnC,SACtBI,EAAUoC,mBAAS1C,GACnBkI,EAAWqC,6BAAmB,CAAEC,MAAO5H,EAAM5C,MAAOM,IAE1DzB,EAAS4L,KAAK,CACVlI,GAAImI,cACJd,YACAnJ,QACAkK,QAAS3K,EACTM,UACAqC,KAAMlC,EAENmC,OACAsF,WACArF,OAAQ,EACRC,YAAa5C,EAEb8C,UAAU,EACVC,SAAS,EACTF,QAAQ,EACR6H,UAAU,EACVC,UAAU,EACVC,UAAU,QAIjBtL,GAAW,IAAI8K,SAAQ,SAAAjI,GAAS,IACrB5C,EAAqB4C,EAArB5C,MAAOC,EAAc2C,EAAd3C,UACf,IAAKb,EAASkM,MAAK,SAAAtI,GAAE,OAAIA,EAAGhC,QAAUf,KAAY,CAC9C,IAAMwI,EAAWqC,6BAAmB,CAAEC,MAAO,QAASxK,MAAOP,IAC7DZ,EAAS4L,KACL,CACIlI,GAAImI,cACJd,YACAnJ,MAAOf,EACPiL,QAASlL,EACTa,QAASoC,mBAASjD,GAClBkD,KAAMjD,EAENkD,KAAM,SACNsF,WACArF,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACR6H,UAAU,EACVC,UAAU,EACVC,UAAU,SAMzBT,GAAS,IAAIC,SAAQ,SAAAjI,GAAS,IACnBO,EAAuBP,EAAvBO,KAAMnC,EAAiB4B,EAAjB5B,MAAOT,EAAUqC,EAAVrC,MACrB,IAAKnB,EAASkM,MAAK,SAAAtI,GAAE,OAAIA,EAAGhC,QAAUA,KAAQ,CAC1C,IAAMyH,EAAWqC,6BAAmB,CAAEC,MAAO5H,EAAM5C,MAAOA,IAE1DnB,EAAS4L,KAAK,CACVlI,GAAImI,cACJd,YACAnJ,QACAkK,QAAS3K,EACTM,QAASoC,mBAAS1C,GAClB2C,KAAMlC,EAENmC,OACAsF,WACArF,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACR6H,UAAU,EACVC,UAAU,EACVC,UAAU,QAKtB,IAAMtD,EAAQ,CACVjF,GAAIqH,EACJ7K,SAAS,EACT6K,YACAe,QAAS,GACTK,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,QAAQ,EACRC,QAAQ,EACR5M,YAGJ,EAAK+B,SAAS,CAAE4G,aAEnBnG,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,S,EAGhDoK,uBAAyB,WAErB,EAAK7I,SAAS,CAAEuB,OAAQ,GAAIqF,MAAO,KAEnC,IAAM2C,EAAa,EAAK3G,KAAKmG,cAAc,cAC3C,GAAKQ,EAAL,CAEA,IAAMP,EAAYO,EACZ1J,EAAQ,OACd,EAAKG,SAAS,CACV4G,MAAO,CACHjF,GAAIqH,EACJ7K,SAAS,EACT6K,YACAe,QAAS,GACTK,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EAEbE,QAAQ,EACRD,QAAQ,EACR3M,SAAU,CACN,CACI0D,GAAImI,cACJd,YACAnJ,QACAkK,QAAS,qBACTrK,QAAS,qBACTqC,KAAMlC,EAENmC,KAAM,SACNsF,SAAU,QACVrF,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACR6H,UAAU,EACVC,UAAU,EACVC,UAAU,S,EAQ9BxC,aAAe,SAAC/F,GAAQ,IACZiF,EAAU,EAAKpI,MAAfoI,MACA3I,EAAa2I,EAAb3I,SACR2I,EAAM3I,SAAWA,EAASuD,QAAO,SAAAC,GAAI,OAAIA,EAAKE,KAAOA,KACrD,EAAK3B,SAAS,CAAE4G,MAAM,eAAMA,M,EAGhCqC,sBAAwB,SAACD,GAAe,IAE9BpC,EADa,EAAKpI,MAAhB+C,OACa4I,MAAK,SAAA1I,GAAI,OAAIA,EAAKuH,YAAcA,KACrD,EAAKhJ,SAAS,CAAE4G,W,EAGpB8B,UAAY,SAACoC,GAAY,IACblE,EAAU,EAAKpI,MAAfoI,MACHA,EAAM3I,WAAU2I,EAAM3I,SAAW,IACtC,IAAMgE,EAAS2E,EAAM3I,SAASgE,OACtB+G,EAAwBpC,EAAxBoC,UAAW/K,EAAa2I,EAAb3I,SACb4B,EAAK,eAAWoC,EAAS,GAGzB8I,EAAY,CACdpJ,GAHOmI,cAIPd,YACAnJ,QACAkK,QAAS,qBACTrK,QAAS,qBACTqC,KAAMlC,EAENmC,KAAM,SACNsF,SAAU,QACVrF,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACT2H,UAAU,EACVC,UAAU,EACVC,UAAU,GAGdY,EAAS7M,EAAS4L,KAAKkB,GAAa9M,EAAS+M,QAAQD,GACrDnE,EAAM3I,SAAN,YAAqBA,GACrB,EAAK+B,SAAS,CAAE4G,MAAM,eAAMA,M,EAIhCqE,U,uCAAY,WAAOC,GAAP,iBAAAC,EAAA,sEACF,EAAKvI,KAAKwI,iBADR,oBAGH,EAAK5M,MAAMoI,aAHR,iBAGH,EAAkB3I,gBAHf,OAGH,EAA4BgE,OAHzB,uBAIJ,IAAMoJ,MAAM,CACRnK,KAAM,cAACC,EAAA,EAAD,IACNtC,MAAO,2BACPuC,QAAS,6HAPT,kBAUGkK,QAAQC,UAVX,gCAaD,IAAID,SAAQ,SAACE,EAASD,GACzB,IAAMN,EAAY,WAAO,IACbrE,EAAU,EAAKpI,MAAfoI,MACF3I,EAAW2I,EAAM3I,SAClB2D,KAAI,SAAAC,GAAE,MAAK,CACRhC,MAAOgC,EAAGhC,MACVH,QAASoC,mBAASD,EAAGnC,SACrBqC,KAAMF,EAAGE,KACTC,KAAMH,EAAGG,KACTsF,SAAUzF,EAAGyF,UAAY,QAEzBpF,WAAYL,EAAGK,WACfC,OAAQN,EAAGM,OACXC,SAAUP,EAAGO,SACbC,QAASR,EAAGQ,YAGdf,EAAS,CACXC,OAAQ,CAAC,2BACFqF,GADC,IAEJ3I,eAIRuN,EAAQlK,IAGP4J,EAKL,IAAMjK,QAAQ,CACVC,KAAM,cAACC,EAAA,EAAD,IACNtC,MAAO,uFACPuC,QAAS,kOACTC,KAAM,WACF4J,KAEJpF,SAAU,WACN0F,OAZJN,QAzCA,2C,wDA2DZjK,U,sBAAY,4BAAAmK,EAAA,sEACa,EAAKF,WAAU,GAD5B,OACF3J,EADE,OAGR,EAAKtB,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK+D,KAAK,iBAAkBhB,EAAQ,CAAEiB,WAAY,mCACxD9B,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,OALpC,2C,EAQZgN,c,sBAAgB,4BAAAN,EAAA,sEACS,EAAKF,YADd,OACN3J,EADM,OAGZ,EAAKtB,SAAS,CAAEvB,SAAS,IACzB,EAAKP,MAAMK,KAAK+D,KAAK,kBAAmBhB,GACnChB,MAAK,SAAAC,GACF,EAAKP,SAAS,CAAE8G,gBAAgB,EAAMlB,YAAarF,OAEtDE,SAAQ,kBAAM,EAAKT,SAAS,CAAEvB,SAAS,OARhC,2C,EAWhBiN,cAAgB,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EACjB,EAAKpN,MAApBoI,aADgC,MACxB,GADwB,IAEdA,EAAlB3I,gBAFgC,MAErB,GAFqB,EAIxCA,EAAS4N,OAAT,MAAA5N,EAAQ,CAAQ0N,EAAU,GAAlB,mBAAwB1N,EAAS4N,OAAOD,EAAU,MAC1DhF,EAAM3I,SAAN,YAAqBA,GAErB,EAAK+B,SAAS,CAAE4G,MAAM,eAAMA,M,EAGhCkF,eAAiB,WAAO,IAAD,EACS,EAAKtN,MAAzBuI,EADW,EACXA,SAAUH,EADC,EACDA,MACZmF,GAAehF,EAGrB,GAFA,EAAK/G,SAAS,CAAE+G,SAAUgF,KAErBA,EAAa,CACd,IAAMjO,EAAQyG,SAASyH,eAAe,gBAAgBlO,MACtD,IAAKA,EAED,YADA,EAAKkC,SAAS,CAAE4G,MAAM,2BAAMA,GAAP,IAAc3I,SAAU,OAIjD,IAAMgO,EAAOnO,EAAMoO,MAAM,MACnBjO,EAAW,GACjBgO,EAAKvC,SAAQ,SAACjI,EAAMtC,GAChB,IAAIgN,EAAM1K,EAAK2K,OAIf,GAFAD,EAAMA,EAAIE,QAAQ,OAAQ,KAE1B,CACA,IAAIjK,EAAW+J,EAAIzK,SAAS,YACxBS,EAASgK,EAAIzK,SAAS,UACtBW,EAAU8J,EAAIzK,SAAS,WAQ3B,GAFAyK,GAFAA,GADAA,GADAA,EAAMA,EAAIE,QAAQ,WAAY,KACpBA,QAAQ,SAAU,KAClBA,QAAQ,UAAW,KAEnBA,QAAQ,OAAQ,KAE1B,CAhB0B,MAkBOF,EAAID,MAAM,KAlBjB,mBAkBrBxM,EAlBqB,KAkBZG,EAlBY,KAkBLyH,EAlBK,KAmBrBA,IAAUA,EAAWqC,6BAAmB,CAAEvK,MAAOM,KACjDG,IAAOA,EAAQyM,6BAAmB,CAAElN,MAAOM,EAAS6M,OAAQtO,EAAS2D,KAAI,SAAAH,GAAI,OAAIA,EAAK5B,YAGtFuC,GAAaD,GAAWE,IACzBD,GAAW,EACXD,GAAS,GAGblE,EAAS4L,KAAK,CACVlI,GAAI9B,EACJkK,QAASrK,EACTA,UACAG,QACAyH,WACAlF,WACAD,SACAE,iBAKR,EAAKrC,SAAS,CAAE4G,MAAM,2BAAMA,GAAP,IAAc3I,iB,uDAnf3C,WACI,IAAM0C,EAAQC,OAAOC,aAAa6B,QAAQ3B,qBAAqB,GACzDmI,EAAatI,OAAOC,aAAa6B,QAAQyG,0BAA0B,GACzExG,KAAKC,KAAKC,eAAe,CAAEqG,eAEvBvI,IACAgC,KAAKC,KAAKC,eAAe,CAAElC,UAE3BgC,KAAKjC,uB,oBA+eb,WAAU,IAAD,WASDiC,KAAKnE,MAPLC,EAFC,EAEDA,QACAkI,EAHC,EAGDA,SACApF,EAJC,EAIDA,OACAqF,EALC,EAKDA,MACAE,EANC,EAMDA,eACAlB,EAPC,EAODA,YACAmB,EARC,EAQDA,SAGE7H,EAAY,GAElB,OACI,eAAC,IAAD,CAAaT,QAASA,GAAWkI,EAAU3H,MAAO,CAAE+D,QAAS,EAAGC,OAAQ,GAAxE,UACI,cAAC,IAAD,CAAUhE,MAAO,CAAEiE,WAAY,EAAGC,YAAa,EAAGjE,YAAa,GAA/D,SACI,mBACIkE,IAAK,SAAAP,GAAI,OAAI,EAAKA,KAAOA,GACzB4J,cAAe,CAAExK,KAAM,QAASoH,OAAQ,MAAOC,SAAU,QAASC,SAAU,UAFhF,SAII,8BACI,cAAC,IAAD,2BACQpK,GADR,IAEI8C,KAAK,eACLD,KAAK,OACLsF,QAAS,CACL,CAAEvJ,MAAO,UAAWsB,MAAO,WAC3B,CAAEtB,MAAO,QAASsB,MAAO,SACzB,CAAEtB,MAAO,WAAYsB,MAAO,uBAEhCkE,SAAUX,KAAKiG,oBAEnB,kBAAM6D,KAAN,CACIC,SAAO,EACPC,aAAc,SAACC,EAAYC,GAAb,OAA4BD,EAAW5K,OAAS6K,EAAW7K,MAF7E,SAIK,YAAwB,IACfA,GAAO+G,EADO,EAApBA,eAC2B,QAC3B,MAAa,UAAT/G,EAEI,8BACI,cAAC,IAAD,2BACQ9C,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBK,MAAM,iCACN2C,KAAK,QACLsB,YAAY,+CACZC,SAAU,EAAK5C,kBACfpB,UAAU,EACViE,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,8DAEvC,cAAC,IAAD,2BACQtE,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBiD,KAAK,SACLoF,YAAU,EACVhI,MAAM,2BACN2C,KAAK,YACLuB,SAAU,EAAK2F,sBACf5B,QAAS9F,EAAOK,KAAI,SAAAH,GAAI,MAAK,CAAE3D,MAAO2D,EAAKuH,UAAW5J,MAAM,GAAD,OAAKqC,EAAKuH,UAAV,YAAuBvH,EAAKsI,aACvFzK,UAAU,EACViE,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,sDAKtC,YAATxB,EAEI,8BACI,cAAC,IAAD,2BACQ9C,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBK,MAAM,2BACN2C,KAAK,aACLsB,YAAY,2BACZC,SAAU,EAAKwF,oBACfxJ,UAAU,EACViE,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,wDAEvC,cAAC,IAAD,2BACQtE,GADR,IAEI8C,KAAK,SACLhD,MAAO,CAAED,MAAO,KAChBsE,YAAY,2BACZtB,KAAK,SACLsF,QAAS,CACL,CAAEvJ,MAAO,MAAOsB,MAAO,OACvB,CAAEtB,MAAO,OAAQsB,MAAO,QACxB,CAAEtB,MAAO,MAAOsB,MAAO,QAE3BkE,SAAU,EAAKwF,oBACfvF,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,wDAEvC,cAAC,IAAD,2BACQtE,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBsE,YAAY,sBACZtB,KAAK,cAET,cAAC,IAAD,2BACQ7C,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBsE,YAAY,sBACZtB,KAAK,iBAMR,aAATC,EAEI,cAAC,IAAD,2BACQ9C,GADR,IAEIF,MAAO,CAAED,MAAO,KAChBK,MAAM,qBACN2C,KAAK,aACLsB,YAAY,gCACZC,SAAU,EAAKuF,uBACfvJ,UAAU,EACViE,MAAO,CAAC,CAAEjE,UAAU,EAAMkE,QAAS,uDAV/C,YAmBpB,sBAAKxE,MAAO,CAAE8N,aAAc,EAAGC,QAAS,OAAQC,eAAgB,iBAAhE,UACI,gCACI,mBAAQtJ,SAAUqD,EAAU/E,KAAK,UAAU2B,QAAS,kBAAM,EAAK+E,aAA/D,0BACA,mBAAQhF,SAAUqD,EAAU/H,MAAO,CAAEgE,OAAQ,SAAWhB,KAAK,UAAU2B,QAAShB,KAAK3B,UAArF,sCACA,mBAAQ0C,SAAUqD,EAAUpD,QAAShB,KAAK8I,cAA1C,sCACA,mBAAQzJ,KAAK,UAAUhD,MAAO,CAAEgE,OAAQ,SAAWW,QAAShB,KAAKmJ,eAAjE,SAAkF/E,EAAW,2BAAS,gCAE1G,qBAAK/H,MAAO,CAAEiO,aAAc,GAAIC,WAAY,GAA5C,SACKnN,qBAAW6G,GAAO,kBAAM,EAAK5G,SAAS,CAAE4G,MAAM,eAAMA,aAG7D,qBAAK5H,MAAO,CAAEmO,SAAU,WAAYxI,OAAQ,uBAA5C,SAEKhC,KAAKnE,MAAMuI,SACR,kBAAOqG,SAAP,CACIzL,GAAG,eACH3C,MAAO,CACHmO,SAAU,WACVxH,IAAK,EACL0H,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVC,aAAY,OAAE5G,QAAF,IAAEA,GAAF,UAAEA,EAAO3I,gBAAT,aAAE,EAAiB2D,KAAI,SAAAH,GAAI,gBAAOA,EAAK/B,SAAW,GAAvB,YAA6B+B,EAAK5B,OAAS,GAA3C,YAAiD4B,EAAK6F,UAAY,GAAlE,YAAwE,CAAC,WAAY,SAAU,WAAW1F,KAAI,SAAA6L,GAAG,OAAIhM,EAAKgM,GAAOA,EAAM,MAAIC,KAAK,SAAQA,KAAK,QAGxM,cAAC,EAAD,CACI9J,WAAS,EACT+J,UAAWhL,KAAK+I,cAChBnB,cAAY,EACZ3L,QAAS+D,KAAK/D,QACdD,WAAU,OAAEiI,QAAF,IAAEA,OAAF,EAAEA,EAAO3I,SACnBgG,OAAO,KACP2J,KAAK,YAIjB,cAAC,EAAD,CACIC,QAAS/G,EACTlB,YAAaA,EACbvE,KAAM,kBAAM,EAAKrB,SAAS,CAAE8G,gBAAgB,KAC5CjB,SAAU,kBAAM,EAAK7F,SAAS,CAAE8G,gBAAgB,c,GA5xB5B5C,e,oBCxBhCuB,E,IAAAA,QAEOnH,sBAAO,CAACwP,KAAM,QAAdxP,EAAuB,WAAgB,IAAD,EACfyP,mBAAS,UADM,mBAC1CC,EAD0C,KAC/BC,EAD+B,KAYjD,OAVAC,qBAAU,WAEN,GAAI3J,SAAS4J,YAAa,CACtB,IAAMC,EAAK7J,SAAS4J,YAAY,cAChCC,EAAGC,UAAU,UAAU,GAAM,GAC7BzN,OAAO0N,cAAcF,QACd7J,SAASgK,mBAChB3N,OAAO4N,UAAU,cAEtB,CAACR,IACJ,cACK,IADL,eAC4BS,IAAEC,MAD9B,SAEQ,oBAAMV,UAAWA,EAAW1K,SAAU,SAAA0K,GAAS,OAAIC,EAAaD,IAAhE,UACI,cAAC,EAAD,CAAsB7H,IAAI,2BAA1B,SACI,cAAC,EAAD,KADS,UAGb,cAAC,EAAD,CAAoBA,IAAI,2BAAxB,SACI,cAAC,EAAD,KADS","file":"static/js/18.855d8bd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Modal, Space } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { FormItem, Table, tableEditable, QueryBar } from '@ra-lib/admin';\nimport config from 'src/commons/config-hoc';\nimport { PageContent } from '@ra-lib/admin';\nimport {\n    DB_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n} from './util';\n\nconst EditTable = tableEditable(Table);\n\nconst renderContent = (value, record) => {\n    const obj = {\n        children: value,\n        props: {},\n    };\n    if (record.isTable) {\n        obj.props.colSpan = 0;\n    }\n    return obj;\n};\n\n\n@config({ ajax: true })\nexport default class Fast extends Component {\n    state = {\n        loading: false,\n        selectedRowKeys: [],\n        dataSource: [],\n    };\n\n    columns = [\n        { title: '表名', dataIndex: 'tableName', width: 200 },\n        { title: '数据库注释', dataIndex: 'comment', width: 200 },\n        {\n            title: <span style={{ paddingLeft: 10 }}>中文名</span>, dataIndex: 'chinese', width: 250,\n            formProps: (record, index) => {\n                return {\n                    label: ' ',\n                    colon: false,\n                    style: { width: 200 },\n                    required: true,\n                    tabIndex: index + 1, // index * 2 + 1\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                };\n            },\n            render: renderContent,\n        },\n        {\n            title: <span style={{ paddingLeft: 10 }}>列名</span>, dataIndex: 'field', width: 250,\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n\n                return {\n                    label: ' ',\n                    colon: false,\n                    style: { width: 200 },\n                    required: true,\n                    tabIndex: index + 100, // index * 2 + 2\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                };\n            },\n            render: (value, record) => {\n                if (record.isTable) {\n                    const tags = renderTags(record, () => this.setState({ dataSource: [...this.state.dataSource] }));\n                    return {\n                        children: <div style={{ textAlign: 'right' }}>{tags}</div>,\n                        props: {\n                            colSpan: 3,\n                        },\n                    };\n                }\n                return value;\n            },\n        },\n        {\n            title: '选项', dataIndex: 'options',\n            render: (value, record) => {\n                const children = renderFieldTags(record, () => this.setState({ dataSource: [...this.state.dataSource] }));\n                return {\n                    children,\n                    props: { colSpan: record.isTable ? 0 : 1 },\n                };\n            },\n        },\n        // {title: '是否为空', dataIndex: 'nullable'},\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        if (dbUrl) {\n            this.form.setFieldsValue({ dbUrl });\n            // 初始化查询\n            this.form.submit();\n        }\n    }\n\n    handleSubmit = (values) => {\n        this.setState({ loading: true });\n        this.props.ajax.get('/ra-gen/tables', values)\n            .then(res => {\n                const { dataSource, selectedRowKeys } = getTables(res);\n\n                this.setState({ dataSource, selectedRowKeys });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = e.target.value;\n\n        // 进行本地存储，记录数据库地址，使用原生存储，不区分用户\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n    };\n\n    handleGen = () => {\n        Modal.confirm({\n            icon: <ExclamationCircleOutlined />,\n            title: '同名文件将被覆盖，是否继续？',\n            content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n            onOk: () => {\n                const { selectedRowKeys, dataSource } = this.state;\n                const tables = dataSource.filter(item => selectedRowKeys.includes(item.id));\n                const result = tables.map(item => {\n                    const children = item.children\n                        .map(it => ({\n                            field: it.field,\n                            chinese: getLabel(it.chinese),\n                            name: it.name,\n                            type: it.type,\n                            length: it.length,\n                            isNullable: it.isNullable,\n                            isForm: it.isForm,\n                            isColumn: it.isColumn,\n                            isQuery: it.isQuery,\n                        }));\n\n                    return {\n                        ...item,\n                        children,\n                    };\n                });\n                const params = {\n                    tables: result,\n                };\n                this.setState({ loading: true });\n                this.props.ajax.post('/ra-gen/tables', params, { successTip: '生成成功！' })\n                    .then(res => {\n                        console.log(res);\n                    })\n                    .finally(() => this.setState({ loading: false }));\n            },\n        });\n    };\n\n    render() {\n        const { dataSource, selectedRowKeys, loading } = this.state;\n\n        return (\n            <PageContent style={{ padding: 0, margin: 0 }} loading={loading}>\n                <QueryBar style={{ marginLeft: 0, marginRight: 0 }}>\n                    <Form\n                        ref={form => this.form = form}\n                        onFinish={this.handleSubmit}\n                    >\n                        <Space>\n                            <FormItem\n                                label=\"数据库地址\"\n                                name=\"dbUrl\"\n                                placeholder=\"mysql://username:password@host:port/database\"\n                                required\n                                onChange={this.handleDbUrlChange}\n                                style={{ width: 400 }}\n                                rules={[{ required: true, message: '请输入数据库地址！' }]}\n                            />\n                            <FormItem>\n                                <Space>\n                                    <Button type=\"primary\" htmlType=\"submit\">获取数据库表</Button>\n                                    <Button disabled={!selectedRowKeys?.length} onClick={this.handleGen}>生成选中表</Button>\n                                </Space>\n                            </FormItem>\n                        </Space>\n                    </Form>\n                </QueryBar>\n\n                <EditTable\n                    fitHeight\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: selectedRowKeys => this.setState({ selectedRowKeys }),\n                        renderCell: (checked, record, index, originNode) => record.isTable ? originNode : null,\n                    }}\n                    dataSource={dataSource}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                />\n            </PageContent>\n        );\n    }\n}\n","import React from 'react';\nimport Prism from 'prismjs';\nimport { CodeEditor } from 'src/components';\n\nexport default class SourceCode extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    state = {\n        containerHeight: 'auto',\n    };\n\n    componentDidMount() {\n        this.highlight();\n\n        this.setHeight();\n        window.addEventListener('resize', this.setHeight);\n    }\n\n    componentDidUpdate() {\n        this.highlight();\n    }\n\n    setHeight = () => {\n        const winHeight = document.documentElement.clientHeight || document.body.clientHeight;\n        console.log(winHeight);\n        const height = winHeight - 286;\n\n        this.setState({ containerHeight: height });\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setHeight);\n    }\n\n    highlight = () => {\n        console.log(this.ref);\n        if (this.ref && this.ref.current) {\n            Prism.highlightElement(this.ref.current);\n        }\n    };\n\n    render() {\n        const { code } = this.props;\n        const { containerHeight } = this.state;\n        return (\n            <div ref={node => this.container = node} style={{ height: containerHeight }}>\n                <CodeEditor\n                    showHeader={false}\n                    value={code}\n                    readOnly\n                />\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs, Button} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from '@ra-lib/admin';\nimport SourceCode from './SourceCode';\n\nconst {TabPane} = Tabs;\n\n@config({\n    modal: {\n        title: '代码预览',\n        width: '70%',\n        top: 50,\n    },\n})\nexport default class index extends Component {\n    state = {};\n\n    render() {\n        const {previewCode, onCancel} = this.props;\n        return (\n            <ModalContent\n                surplusSpace\n                footer={<Button onClick={onCancel}>关闭</Button>}\n                bodyStyle={{padding: 0}}\n            >\n                <Tabs tabBarStyle={{margin: '0 16px'}}>\n                    {previewCode.map(item => {\n                        const {config: {fileTypeName}, code} = item;\n                        return (\n                            <TabPane tab={fileTypeName} key={fileTypeName}>\n                                <SourceCode\n                                    language=\"jsx\"\n                                    plugins={['line-numbers']}\n                                    code={code}\n                                />\n                            </TabPane>\n                        );\n                    })}\n                </Tabs>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Modal, Input, Space} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {v4 as uuid} from 'uuid';\nimport config from 'src/commons/config-hoc';\nimport {\n    // isInputLikeElement,\n    PageContent,\n    QueryBar,\n    FormItem,\n    Table,\n    tableEditable,\n    tableRowDraggable,\n    Operator,\n} from '@ra-lib/admin';\nimport {\n    DB_URL_STORE_KEY,\n    SWAGGER_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n    getFormElementType,\n    getFormElementName,\n} from './util';\nimport PreviewModal from './PreviewModal';\n\nconst EditTable = tableEditable(tableRowDraggable(Table));\n\n@config({\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        total: 0,           // 分页中条数\n        pageNum: 1,         // 分页当前页\n        pageSize: 20,       // 分页每页显示条数\n        deleting: false,    // 删除中loading\n        table: {},          // 当前编辑table\n        tables: [],         // 数据库表\n        ignoreFields: [],   // 忽略字段\n        previewVisible: false,\n        previewCode: '',\n        fastEdit: false,   // test area 快速编辑\n    };\n\n    columns = [\n        { title: '注释', dataIndex: 'comment' },\n        {\n            title: '中文名', dataIndex: 'chinese', width: 240,\n            formProps: (record, index) => {\n                const tabIndex = index + 1; // index * 2 + 1\n                return {\n                    label: ' ',\n                    colon: false,\n                    style: { width: 200 },\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '列名', dataIndex: 'field', width: 240,\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n                const { table: { children } } = this.state;\n                const length = children?.length || 0;\n\n                const tabIndex = index + length + 1; // index * 2 + 2;\n                return {\n                    label: ' ',\n                    colon: false,\n                    style: { width: 200 },\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '表单类型', dataIndex: 'formType', width: 240,\n            formProps: (record) => {\n                if (record.isTable) return null;\n\n                return {\n                    label: ' ',\n                    colon: false,\n                    style: { width: 200 },\n                    type: 'select',\n                    showSearch: true,\n                    options: [\n                        { value: 'input', label: '输入框' },\n                        { value: 'hidden', label: '隐藏框' },\n                        { value: 'number', label: '数字框' },\n                        { value: 'textarea', label: '文本框' },\n                        { value: 'password', label: '密码框' },\n                        { value: 'mobile', label: '手机输入框' },\n                        { value: 'email', label: '邮箱输入框' },\n                        { value: 'select', label: '下拉框' },\n                        { value: 'select-tree', label: '下拉树' },\n                        { value: 'checkbox', label: '复选框' },\n                        { value: 'checkbox-group', label: '复选框组' },\n                        { value: 'radio', label: '单选框' },\n                        { value: 'radio-group', label: '单选框组' },\n                        { value: 'radio-button', label: '单选按钮组' },\n                        { value: 'switch', label: '切换按钮' },\n                        { value: 'date', label: '日期选择框' },\n                        { value: 'time', label: '时间选择框' },\n                        { value: 'moth', label: '月份选择框' },\n                        { value: 'date-time', label: '日期+时间选择框' },\n                        { value: 'date-range', label: '日期区间选择框' },\n                        { value: 'cascader', label: '级联下拉框' },\n                        { value: 'transfer', label: '穿梭框' },\n                    ],\n                    onChange: (formType) => {\n                        record.formType = formType;\n                    },\n                };\n            },\n        },\n        {\n            title: '选项', dataIndex: 'operator', width: 270,\n            render: (value, record) => {\n                return renderFieldTags(record, () => this.setState({ table: { ...this.state.table } }));\n            },\n        },\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const { id, chinese } = record;\n                const items = [\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${chinese}\"?`,\n                            onConfirm: () => this.handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        const swaggerUrl = window.localStorage.getItem(SWAGGER_URL_STORE_KEY) || '';\n        this.form.setFieldsValue({ swaggerUrl });\n\n        if (dbUrl) {\n            this.form.setFieldsValue({ dbUrl });\n            // 初始化查询\n            this.handleDbUrlChange();\n        }\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    };\n\n    handleKeyDown = (e, tabIndex) => {\n        const { keyCode, ctrlKey, shiftKey, altKey, metaKey } = e;\n\n        if (ctrlKey || shiftKey || altKey || metaKey) return;\n\n        const { table: { children } } = this.state;\n        const length = children?.length || 0;\n\n        const isUp = keyCode === 38;\n        const isRight = keyCode === 39;\n        const isDown = keyCode === 40;\n        const isLeft = keyCode === 37;\n        const isEnter = keyCode === 13;\n\n        let nextTabIndex;\n\n        if (isDown || isEnter) {\n            if (tabIndex === length || tabIndex === length * 2) {\n                nextTabIndex = undefined;\n            } else {\n                nextTabIndex = tabIndex + 1;\n            }\n        }\n\n        if (isUp) nextTabIndex = tabIndex - 1;\n\n        if (isLeft) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex - 1 <= 0 ? undefined : tabIndex - 1 + length;\n            } else {\n                nextTabIndex = tabIndex - length;\n            }\n        }\n\n        if (isRight) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex + length;\n            } else {\n                nextTabIndex = tabIndex - length === length ? undefined : tabIndex - length + 1;\n            }\n        }\n\n        const nextInput = document.querySelector(`input[tabindex='${nextTabIndex}']`);\n\n        if (nextInput) {\n            // 确保方向键也可以选中\n            setTimeout(() => {\n                nextInput.focus();\n                nextInput.select();\n            });\n        } else if (isEnter || isDown || isRight) {\n            // 新增一行\n            this.handleAdd(true);\n\n            // 等待新增行渲染完成，新增行 input 获取焦点\n            setTimeout(() => {\n                let ti = tabIndex;\n\n                if (isRight) ti = tabIndex - length;\n\n                if ((isDown || isEnter) && tabIndex === length * 2) ti = tabIndex + 1;\n\n                this.handleKeyDown({ keyCode: 13 }, ti);\n            });\n        }\n    };\n\n    handleTypeChange = (e) => {\n        const type = e.target.value;\n        if (type === 'mysql') {\n            this.handleDbUrlChange();\n        }\n        if (type === 'customer') {\n            this.handleModuleNameChange();\n        }\n        if (type === 'swagger') {\n            this.handleSwaggerChange();\n        }\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = this.form.getFieldValue('dbUrl');\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n        this.form.setFieldsValue({ tableName: undefined });\n\n        if (!dbUrl) return;\n\n        this.setState({ loading: true });\n        this.props.ajax.get('/ra-gen/tables', { dbUrl })\n            .then(res => {\n                const { dataSource } = getTables(res);\n                this.setState({ tables: dataSource }, () => {\n\n                    // 默认选中第一个表\n                    const tableName = dataSource[0]?.tableName;\n\n                    this.form.setFieldsValue({ tableName });\n                    this.handleTableNameChange(tableName);\n                });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleSwaggerChange = () => {\n        const swaggerUrl = this.form.getFieldValue('swaggerUrl');\n        window.localStorage.setItem(SWAGGER_URL_STORE_KEY, swaggerUrl);\n\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n        this.form.setFieldsValue({ tableName: undefined });\n\n        if (!swaggerUrl) return;\n\n\n        const method = this.form.getFieldValue('method');\n        const userName = this.form.getFieldValue('userName');\n        const password = this.form.getFieldValue('password');\n        const params = {\n            swaggerUrl,\n            method,\n            userName,\n            password,\n        };\n\n        this.setState({ loading: true });\n        this.props.ajax.get('/ra-gen/swagger', params)\n            .then(res => {\n                const { moduleName: tableName, queries, columns, forms } = res;\n\n                const children = [];\n                (queries || []).forEach(item => {\n                    const { type, field, label, required } = item;\n                    const chinese = getLabel(label);\n                    const formType = getFormElementType({ oType: type, label: chinese });\n\n                    children.push({\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: label,\n                        chinese,\n                        name: field,\n\n                        type,\n                        formType,\n                        length: 0,\n                        isNullable: !required,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isExport: true,\n                        isImport: true,\n                        isIgnore: false,\n                    });\n                });\n\n                (columns || []).forEach(item => {\n                    const { title, dataIndex } = item;\n                    if (!children.find(it => it.field === dataIndex)) {\n                        const formType = getFormElementType({ oType: 'input', label: title });\n                        children.push(\n                            {\n                                id: uuid(),\n                                tableName,\n                                field: dataIndex,\n                                comment: title,\n                                chinese: getLabel(title),\n                                name: dataIndex,\n\n                                type: 'string',\n                                formType,\n                                length: 0,\n                                isNullable: true,\n\n                                isColumn: true,\n                                isQuery: false,\n                                isForm: true,\n                                isExport: true,\n                                isImport: true,\n                                isIgnore: false,\n                            },\n                        );\n                    }\n                });\n\n                (forms || []).forEach(item => {\n                    const { type, field, label } = item;\n                    if (!children.find(it => it.field === field)) {\n                        const formType = getFormElementType({ oType: type, label: label });\n\n                        children.push({\n                            id: uuid(),\n                            tableName,\n                            field,\n                            comment: label,\n                            chinese: getLabel(label),\n                            name: field,\n\n                            type,\n                            formType,\n                            length: 0,\n                            isNullable: true,\n\n                            isColumn: true,\n                            isQuery: false,\n                            isForm: true,\n                            isExport: true,\n                            isImport: true,\n                            isIgnore: false,\n                        });\n                    }\n                });\n\n                const table = {\n                    id: tableName,\n                    isTable: true,\n                    tableName,\n                    comment: '',\n                    query: true,\n                    selectable: true,\n                    pagination: true,\n                    serialNumber: true,\n                    add: true,\n                    operatorEdit: true,\n                    operatorDelete: true,\n                    batchDelete: true,\n                    export: true,\n                    import: false,\n                    children,\n                };\n\n                this.setState({ table });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleModuleNameChange = () => {\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n\n        const moduleName = this.form.getFieldValue('moduleName');\n        if (!moduleName) return;\n\n        const tableName = moduleName;\n        const field = 'name';\n        this.setState({\n            table: {\n                id: tableName,\n                isTable: true,\n                tableName,\n                comment: '',\n                query: true,\n                selectable: true,\n                pagination: true,\n                serialNumber: true,\n                add: true,\n                operatorEdit: true,\n                operatorDelete: true,\n                batchDelete: true,\n\n                import: true,\n                export: true,\n                children: [\n                    {\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: '用户名',\n                        chinese: '用户名',\n                        name: field,\n\n                        type: 'string',\n                        formType: 'input',\n                        length: 0,\n                        isNullable: true,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isExport: true,\n                        isImport: true,\n                        isIgnore: false,\n                    },\n                ],\n            },\n        });\n\n    };\n\n    handleDelete = (id) => {\n        const { table } = this.state;\n        const { children } = table;\n        table.children = children.filter(item => item.id !== id);\n        this.setState({ table: { ...table } });\n    };\n\n    handleTableNameChange = (tableName) => {\n        const { tables } = this.state;\n        const table = tables.find(item => item.tableName === tableName);\n        this.setState({ table });\n    };\n\n    handleAdd = (append) => {\n        const { table } = this.state;\n        if (!table.children) table.children = [];\n        const length = table.children.length;\n        const { tableName, children } = table;\n        const field = `field${length + 1}`;\n        const id = uuid();\n\n        const newRecord = {\n            id,\n            tableName,\n            field,\n            comment: '新增列',\n            chinese: '新增列',\n            name: field,\n\n            type: 'string',\n            formType: 'input',\n            length: 0,\n            isNullable: true,\n\n            isColumn: true,\n            isQuery: false,\n            isExport: true,\n            isImport: true,\n            isIgnore: false,\n        };\n\n        append ? children.push(newRecord) : children.unshift(newRecord);\n        table.children = [...children];\n        this.setState({ table: { ...table } });\n    };\n\n    /** 获取参数 */\n    getParams = async (showTip) => {\n        await this.form.validateFields();\n\n        if (!this.state.table?.children?.length) {\n            Modal.error({\n                icon: <ExclamationCircleOutlined/>,\n                title: '温馨提示',\n                content: '字段配置为空，无法生成，请添加字段信息！',\n            });\n\n            return Promise.reject();\n        }\n\n        return new Promise((resolve, reject) => {\n            const getParams = () => {\n                const { table } = this.state;\n                const children = table.children\n                    .map(it => ({\n                        field: it.field,\n                        chinese: getLabel(it.chinese),\n                        name: it.name,\n                        type: it.type,\n                        formType: it.formType || 'input',\n                        // length: isInputLikeElement(it.formType || 'input') ? it.length : 0,\n                        isNullable: it.isNullable,\n                        isForm: it.isForm,\n                        isColumn: it.isColumn,\n                        isQuery: it.isQuery,\n                    }));\n\n                const params = {\n                    tables: [{\n                        ...table,\n                        children,\n                    }],\n                };\n\n                resolve(params);\n            };\n\n            if (!showTip) {\n                getParams();\n                return;\n            }\n\n            Modal.confirm({\n                icon: <ExclamationCircleOutlined/>,\n                title: '同名文件将被覆盖，是否继续？',\n                content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n                onOk: () => {\n                    getParams();\n                },\n                onCancel: () => {\n                    reject();\n                },\n            });\n        });\n    };\n\n    handleGen = async () => {\n        const params = await this.getParams(true);\n\n        this.setState({ loading: true });\n        this.props.ajax.post('/ra-gen/tables', params, { successTip: '生成成功！' })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handlePreview = async () => {\n        const params = await this.getParams();\n\n        this.setState({ loading: true });\n        this.props.ajax.post('/ra-gen/preview', params)\n            .then(res => {\n                this.setState({ previewVisible: true, previewCode: res });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleSortEnd = ({ newIndex, oldIndex }) => {\n        const { table = {} } = this.state;\n        const { children = [] } = table;\n\n        children.splice(newIndex, 0, ...children.splice(oldIndex, 1));\n        table.children = [...children];\n\n        this.setState({ table: { ...table } });\n    };\n\n    handleFastEdit = () => {\n        const { fastEdit, table } = this.state;\n        const nextVisible = !fastEdit;\n        this.setState({ fastEdit: nextVisible });\n\n        if (!nextVisible) {\n            const value = document.getElementById('fastTextArea').value;\n            if (!value) {\n                this.setState({ table: { ...table, children: [] } });\n                return;\n            }\n\n            const rows = value.split('\\n');\n            const children = [];\n            rows.forEach((item, index) => {\n                let str = item.trim();\n                // 多个空格 替换成一个\n                str = str.replace(/\\s+/g, ' ');\n\n                if (!str) return;\n                let isColumn = str.includes('isColumn');\n                let isForm = str.includes('isForm');\n                let isQuery = str.includes('isQuery');\n\n                str = str.replace('isColumn', '');\n                str = str.replace('isForm', '');\n                str = str.replace('isQuery', '');\n\n                str = str.replace(/\\s+/g, ' ');\n\n                if (!str) return;\n\n                let [chinese, field, formType] = str.split(' ');\n                if (!formType) formType = getFormElementType({ label: chinese });\n                if (!field) field = getFormElementName({ label: chinese, fields: children.map(item => item.field) });\n\n\n                if (!isColumn && !isForm && !isQuery) {\n                    isColumn = true;\n                    isForm = true;\n                }\n\n                children.push({\n                    id: field,\n                    comment: chinese,\n                    chinese,\n                    field,\n                    formType,\n                    isColumn,\n                    isForm,\n                    isQuery,\n                });\n\n            });\n\n            this.setState({ table: { ...table, children } });\n        }\n    };\n\n    render() {\n        const {\n            loading,\n            deleting,\n            tables,\n            table,\n            previewVisible,\n            previewCode,\n            fastEdit,\n        } = this.state;\n\n        const formProps = {};\n\n        return (\n            <PageContent loading={loading || deleting} style={{ padding: 0, margin: 0 }}>\n                <QueryBar style={{ marginLeft: 0, marginRight: 0, paddingLeft: 0 }}>\n                    <Form\n                        ref={form => this.form = form}\n                        initialValues={{ type: 'mysql', method: 'get', userName: 'admin', password: '123456' }}\n                    >\n                        <Space>\n                            <FormItem\n                                {...formProps}\n                                type=\"radio-button\"\n                                name=\"type\"\n                                options={[\n                                    { value: 'swagger', label: 'Swagger' },\n                                    { value: 'mysql', label: 'MySql' },\n                                    { value: 'customer', label: '自定义' },\n                                ]}\n                                onChange={this.handleTypeChange}\n                            />\n                            <Form.Item\n                                noStyle\n                                shouldUpdate={(prevValues, currValues) => prevValues.type !== currValues.type}\n                            >\n                                {({ getFieldValue }) => {\n                                    const type = getFieldValue('type');\n                                    if (type === 'mysql') {\n                                        return (\n                                            <Space>\n                                                <FormItem\n                                                    {...formProps}\n                                                    style={{ width: 500 }}\n                                                    label=\"数据库地址\"\n                                                    name=\"dbUrl\"\n                                                    placeholder=\"mysql://username:password@host:port/database\"\n                                                    onChange={this.handleDbUrlChange}\n                                                    required={true}\n                                                    rules={[{ required: true, message: '请输入数据库地址！' }]}\n                                                />\n                                                <FormItem\n                                                    {...formProps}\n                                                    style={{ width: 200 }}\n                                                    type=\"select\"\n                                                    showSearch\n                                                    label=\"数据库表\"\n                                                    name=\"tableName\"\n                                                    onChange={this.handleTableNameChange}\n                                                    options={tables.map(item => ({ value: item.tableName, label: `${item.tableName} ${item.comment}` }))}\n                                                    required={true}\n                                                    rules={[{ required: true, message: '请选择数据库表!' }]}\n                                                />\n                                            </Space>\n                                        );\n                                    }\n                                    if (type === 'swagger') {\n                                        return (\n                                            <Space>\n                                                <FormItem\n                                                    {...formProps}\n                                                    style={{ width: 400 }}\n                                                    label=\"接口地址\"\n                                                    name=\"swaggerUrl\"\n                                                    placeholder=\"http(s)://host:port/path\"\n                                                    onChange={this.handleSwaggerChange}\n                                                    required={true}\n                                                    rules={[{ required: true, message: '请输入接口地址！' }]}\n                                                />\n                                                <FormItem\n                                                    {...formProps}\n                                                    type=\"select\"\n                                                    style={{ width: 100 }}\n                                                    placeholder=\"接口方法\"\n                                                    name=\"method\"\n                                                    options={[\n                                                        { value: 'get', label: 'GET' },\n                                                        { value: 'post', label: 'POST' },\n                                                        { value: 'put', label: 'PUT' },\n                                                    ]}\n                                                    onChange={this.handleSwaggerChange}\n                                                    rules={[{ required: true, message: '请选择接口方法！' }]}\n                                                />\n                                                <FormItem\n                                                    {...formProps}\n                                                    style={{ width: 120 }}\n                                                    placeholder=\"Swagger用户\"\n                                                    name=\"userName\"\n                                                />\n                                                <FormItem\n                                                    {...formProps}\n                                                    style={{ width: 120 }}\n                                                    placeholder=\"Swagger密码\"\n                                                    name=\"password\"\n                                                />\n                                            </Space>\n                                        );\n                                    }\n\n                                    if (type === 'customer') {\n                                        return (\n                                            <FormItem\n                                                {...formProps}\n                                                style={{ width: 300 }}\n                                                label=\"模块名\"\n                                                name=\"moduleName\"\n                                                placeholder=\"比如：user-center\"\n                                                onChange={this.handleModuleNameChange}\n                                                required={true}\n                                                rules={[{ required: true, message: '请输入模块名！' }]}\n                                            />\n                                        );\n                                    }\n                                }}\n                            </Form.Item>\n                        </Space>\n                    </Form>\n                </QueryBar>\n                <div style={{ marginBottom: 8, display: 'flex', justifyContent: 'space-between' }}>\n                    <div>\n                        <Button disabled={fastEdit} type=\"primary\" onClick={() => this.handleAdd()}>添加</Button>\n                        <Button disabled={fastEdit} style={{ margin: '0 8px' }} type=\"primary\" onClick={this.handleGen}>生成文件</Button>\n                        <Button disabled={fastEdit} onClick={this.handlePreview}>代码预览</Button>\n                        <Button type=\"primary\" style={{ margin: '0 8px' }} onClick={this.handleFastEdit}>{fastEdit ? '表格编辑' : '快速编辑'}</Button>\n                    </div>\n                    <div style={{ paddingRight: 23, paddingTop: 3 }}>\n                        {renderTags(table, () => this.setState({ table: { ...table } }))}\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: 'calc(100vh - 230px)' }}>\n\n                    {this.state.fastEdit ? (\n                        <Input.TextArea\n                            id=\"fastTextArea\"\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                left: 0,\n                            }}\n                            defaultValue={table?.children?.map(item => `${item.chinese || ''} ${item.field || ''} ${item.formType || ''} ${['isColumn', 'isForm', 'isQuery'].map(key => item[key] ? key : '').join(' ')}`).join('\\n')}\n                        />\n                    ) : (\n                        <EditTable\n                            fitHeight\n                            onSortEnd={this.handleSortEnd}\n                            serialNumber\n                            columns={this.columns}\n                            dataSource={table?.children}\n                            rowKey=\"id\"\n                            size=\"small\"\n                        />\n                    )}\n                </div>\n                <PreviewModal\n                    visible={previewVisible}\n                    previewCode={previewCode}\n                    onOk={() => this.setState({ previewVisible: false })}\n                    onCancel={() => this.setState({ previewVisible: false })}\n                />\n            </PageContent>\n        );\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Tabs } from 'antd';\nimport { PageContent } from '@ra-lib/admin';\nimport Fast from './Fast';\nimport Single from './Single';\nimport config from 'src/commons/config-hoc'\nimport s from './style.less';\n\nconst { TabPane } = Tabs;\n\nexport default config({path: '/gen'})(function Gen() {\n    const [activeKey, setActiveKey] = useState('single');\n    useEffect(() => {\n        // 触发 window resize 事件，重新调整页面高度\n        if (document.createEvent) {\n            const ev = document.createEvent('HTMLEvents');\n            ev.initEvent('resize', true, true);\n            window.dispatchEvent(ev);\n        } else if (document.createEventObject) {\n            window.fireEvent('onresize');\n        }\n    }, [activeKey]);\n    return (\n        <PageContent className={s.root}>\n            <Tabs activeKey={activeKey} onChange={activeKey => setActiveKey(activeKey)}>\n                <TabPane key=\"single\" tab=\"单独生成\">\n                    <Single />\n                </TabPane>\n                <TabPane key=\"fast\" tab=\"快速生成\">\n                    <Fast />\n                </TabPane>\n            </Tabs>\n        </PageContent>\n    );\n})\n"],"sourceRoot":""}